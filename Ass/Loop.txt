Assignment : LOOP (c)
Name: Saurabh Kashinath Wani								
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1.Write a program in C to display the first 10 natural numbers.
Input:

#include <stdio.h>
int main(void) 
{
    int i;
    for (i = 1; i <= 10; i++) 
    {
        printf("%d ", i);
    }
    printf("\n");

    return 0;
}

Output:
1 2 3 4 5 6 7 8 9 10 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2.Write a C program to find the sum of first 10 natural numbers.
Input:

#include <stdio.h>
int main(void) 
{
 int sum=0,i;
    for (i = 1; i <= 10; i++) 
    {
        printf("%d ", i);
        sum=sum+i;
    }
    printf("\n");
    printf("\n sum=%d",sum);

    return 0;
}

Output:
1 2 3 4 5 6 7 8 9 10 

 sum=55
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3.Write a program in C to display n terms of natural number and their sum. 
Input:

#include <stdio.h>  
int main(void) 
{
    int i, n, sum = 0;  // Declare variables 

    printf("Enter the numbers= ");  
    scanf("%d", &n);  

    printf("\nThe first %d natural numbers are=\n", n);  

    for (i = 1; i <= n; i++)
    {  
        printf("%d ", i);  
        sum =sum+i;  
    }

    printf("\nThe Sum of natural numbers upto %d terms : %d \n", n, sum);  
    return 0;
}

Output:
The first 7 natural numbers are=
1 2 3 4 5 6 7
The Sum of natural numbers upto 7 terms : 28
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4.Write a program in C to read 10 numbers from keyboard and find their sum and average.
Input:
#include <stdio.h>
int main(void) 
{
    int i, n, sum = 0; 
    float avg;  

    printf("Enter 10 numbers = \n");  
    for (i = 1; i <= 10; i++) 
    {  
        printf("Number%d = ", i);  
        scanf("%d", &n);  
        sum += n;  
    }
    avg = sum / 10.0;  
    printf("The sum of 10 no is : %d\nThe Average is= %f\n", sum, avg);  
    return 0;
}

Output:
Enter 10 numbers =
Number1 = 1
Number2 = 2
Number3 = 3
Number4 = 4
Number5 = 5
Number6 = 6
Number7 = 7
Number8 = 8
Number9 = 9
Number10 = 10
The sum of 10 no is : 55
The Average is= 5.500000
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5.Write a program in C to display the cube of the number upto given an integer.
Input:

#include <stdio.h>
int main(void) 
{
    int n, i;
    printf("Enter the number= ");
    scanf("%d", &n);
    
    for (i = 1; i <= n; i++) 
    {
        printf("Number is %d and cube of the %d is = %d\n", i, i, i * i * i);
    }
    return 0;
}

Output:	
Enter the number= 4
Number is 1 and cube of the 1 is = 1
Number is 2 and cube of the 2 is = 8
Number is 3 and cube of the 3 is = 27
Number is 4 and cube of the 4 is = 64
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6.Write a program in C to display the multiplication table of a given integer. 
Input:
#include <stdio.h>  
int main(void) 
{
    int j, n;  

    printf("Enter the number = ");  
    scanf("%d", &n);  
    printf("\n");  
    for (j = 1; j <= 10; j++) 
    { 
        printf("%d X %d = %d \n", n, j, n * j);  
    }
    return 0;
}

Output:
Enter the number = 6

6 X 1 = 6
6 X 2 = 12
6 X 3 = 18
6 X 4 = 24
6 X 5 = 30
6 X 6 = 36
6 X 7 = 42
6 X 8 = 48
6 X 9 = 54
6 X 10 = 60
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7.Write a program in C to display the n terms of odd natural number and their sum .
Input:
#include <stdio.h>  
int main() 
{
    int i, n, sum = 0; 

    printf("Enter the number= ");  
    scanf("%d", &n);  
    printf("\nThe odd numbers are :");  

    for (i = 1; i <= n; i++) 
    {  
        printf("%d ", 2 * i - 1);  
        sum = sum + 2 * i - 1;  
    }
    printf("\nThe Sum of odd Number upto %d = %d \n", n, sum);  
    return 0;
}

Output:
Enter the number= 10

The odd numbers are :1 3 5 7 9 11 13 15 17 19
The Sum of odd Number upto 10 = 100
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8.Write a program in C to display the pattern like right angle triangle using an asterisk.
Input:
#include <stdio.h>
int main(void) 
{
    int i, j, k;
    printf("Enter the value = ");  
    scanf("%d", &k);  
    for (i = 1; i <= k; i++) 
    {  
        for (j = 1; j <= i; j++)
            printf("* ");

        printf("\n");
    }
    return 0;
}


Output:
Enter the value = 5
* 
* * 
* * * 
* * * * 
* * * * * 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9.Write a program in C to display the pattern like right angle triangle with a number.
Input:
#include <stdio.h>  
int main(void) 
{
    int i, j, k;  
    printf("Enter the number= ");
    scanf("%d", &k);
    for (i = 1; i <= k; i++)
    { 
        for (j = 1; j <= i; j++)
            printf("%d ", j);
        printf("\n");
    }
	return 0;
}

Output:
Enter the number= 5
1 
1 2
1 2 3
1 2 3 4
1 2 3 4 5
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10.Write a program in C to make such a pattern like right angle triangle with a number which will repeat a number in a row.
Input:
#include<stdio.h>
int main (void)
{
     int a=4,j,i;
    for (i=1; i<=a; i++)
    {
        for (j=1; j<=i; j++)
        {
            printf("%d ",i);
        }
        printf("\n");
	}
	return 0;
}

Output:
1
2 2
3 3 3
4 4 4 4 


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11.Write a program in C to make such a pattern like right angle triangle with number increased by 1.
Input:
#include <stdio.h>
int main(void) 
{
    int i, j, rows, k = 1;

    printf("Enter number of rows : ");
    scanf("%d", &rows);

    for (i = 1; i <= rows; i++) 
    {
        for (j = 1; j <= i; j++)
        printf("%d ", k++);
        printf("\n");
    }
    return 0;
}

Output:
Enter rows number of rows : 4
1
2 3
4 5 6
7 8 9 10


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12.Write a program in C to make such a pattern like a pyramid with numbers increased by 1.
Input:
#include <stdio.h>
int main(void) 
{
    int n, number = 1, m, i, j;

    printf("Enter the number of n: ");
    scanf("%d", &n);

    for (i = 1; i <= n; i++) 
    {
        for (m = i; m < n; m++) 
        {
            printf("  ");
        } 
        for (j = 1; j <= i; j++) 
        {
            printf("%d ", number++);
        }
        printf("\n");
    }

    return 0;
}


Output:
Enter the number of n: 5
        1
      2 3
    4 5 6
  7 8 9 10
11 12 13 14 15
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13.Write a program in C to make such a pattern like a pyramid with an asterisk.
Input:
#include <stdio.h>

int main(void) 
{
    int n, m, i, j;
    printf("Enter the number of n: ");
    scanf("%d", &n);

    for (i = 1; i <= n; i++) 
    {
    
        for (m = i; m < n; m++) 
        {
            printf(" ");
        }
        for (j = 1; j <= i; j++) 
        {
            printf("* ");
        }
        printf("\n");
    }
    return 0;
}


Output:
Enter the number of n: 4
   *
  * *
 * * *
* * * *
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14.Write a C program to calculate the factorial of a given number. 
Input: 
#include <stdio.h>
int  main(void)
{
  int i, f = 1, num;

  printf("Enter the number : ");
  scanf("%d", &num);

  for(i = 1; i <= num; i++)
      f = f * i;

  printf("The Factorial of %d is: %d\n", num, f);
   return 0;
}

Output:	
Enter the number : 4
The Factorial of 4 is: 24
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15.Write a program in C to display the n terms of even natural number and their sum.
Input:
#include <stdio.h>
int main(void) 
{
    int n, i, sum = 0;

    printf("Input number of terms: ");
    scanf("%d", &n);
    printf("The even numbers are: ");
    for (i = 2; i <= 2 * n; i += 2) 
    {
        printf("%d ", i);
        sum = sum +i;
    }
    printf("\nThe Sum of even Natural Numbers up to %d terms: %d\n", n, sum);
    return 0;
}

Output:
Input number of terms: 5
The even numbers are: 2 4 6 8 10
The Sum of even Natural Numbers up to 5 terms: 30
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16.Write a program in C to make such a pattern like a pyramid with a number which will repeat the number in the same row.
Input:
#include <stdio.h>
int main(void) 
{
    int rows, i, j;
    printf("Enter the number of rows= ");
    scanf("%d", &rows);

    for (i = 1; i <= rows; i++) 
    {
       for (j = i; j < rows; j++) 
        {
            printf("  ");
        }
        for (j = 1; j <= i; j++) 
        {
            printf("%d ", i);
        }
        printf("\n");
    }
    return 0;
}

Output:
Enter the number of rows= 5
        1 
      2 2 
    3 3 3 
  4 4 4 4 
5 5 5 5 5 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17.Write a program in C to display the pattern like a pyramid using asterisk and each row contain an odd number of asterisks.
Input:
#include <stdio.h>
int main(void) 
{
    int rows, i, j, k;
    printf("Enter the number of rows= ");
    scanf("%d", &rows);

    for (i = 1, k = 0; i <= rows; ++i, k = 0) 
    {
        for (j = 1; j <= rows - i; ++j) 
        {
            printf("  ");
        }
        while (k != 2 * i - 1) 
        {
            printf("* ");
            ++k;
        }
        printf("\n");
    }
    return 0;
}

Output:
Enter the number of rows= 4
      * 
    * * *
  * * * * *
* * * * * * *   

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18.Write a program in C to display the sum of the series [ 9 + 99 + 999 + 9999 ...].
Input:
#include <stdio.h>
int main(void) 
{
    int n, i;
    long long sum = 0, term = 9, m = 10;

    printf("enter the number of n: ");
    scanf("%d", &n);

    printf("The series is: ");
    for (i = 0; i < n; i++) 
    {
        printf("%lld ", term);
        sum += term;
        term = term * m + 9;
    }
    printf("\nThe sum of the series = %lld\n", sum);
    return 0;
}
Output:
enter the number of n: 5
The series is: 9 99 999 9999 99999
The sum of the series = 111105
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19.Write a program in C to print the Floyd's Triangle.

#include <stdio.h>

int main() {
    int rows, number = 1;

    printf("Enter the number of rows for Floyd's Triangle: ");
    scanf("%d", &rows);

    printf("Floyd's Triangle:\n");
    for (int i = 1; i <= rows; i++) {
        for (int j = 1; j <= i; j++) {
            if ((i + j) % 2 == 0) {
                printf("1 ");
            } else {
                printf("0 ");
            }
        }
        printf("\n");
    }

    return 0;
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20.Write a program in C to display the n terms of square natural number and their sum. 
Input:
#include <stdio.h>
int main(void) 
{
    int m, i, sum = 0, sq;
    printf("Enter the number of m= ");
    scanf("%d", &m);

    printf("The square natural numbers up to %d m= ", m);
    for (i = 1; i <= m; i++) 
    {
         sq = i * i;
        printf("%d ", sq);
        sum = sum + sq;
    }

    printf("\nThe Sum of Square Natural Numbers %d m = %d\n", m, sum);

    return 0;
}

Output:
Enter the number of m= 5
The square natural numbers up to 5 m= 1 4 9 16 25
The Sum of Square Natural Numbers 5 m = 55
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21.Write a program in C to find the sum of the series 1 +11 + 111 + 1111 + .. n terms.
Input:
#include <stdio.h>

int main(void) 
{
    int m, i;
    long long sum = 0, k = 0, multiplier = 10;

    printf("Input the number of m: ");
    scanf("%d", &m);

    printf("The series is: ");
    for (i = 1; i <= m; i++) 
    {
        k = k * multiplier + 1;
        printf("%lld ", k);

        sum = sum +k;
    }
    printf("\nThe Sum is: %lld\n", sum);
    return 0;
}

Output:
Input the number of m: 5
The series is: 1 11 111 1111 11111
The Sum is: 12345
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22.Write a C program to check whether a given number is an armstrong number or not.
Input:
#include <stdio.h>
#include<math.h>
int main(void)
{
    int a, b, remainder, result = 0, n = 0;
  
    printf("Input a = ");
    scanf("%d", &a);

    b = a;
    while (b != 0) 
    {
        b /= 10;
        ++n;
    }
    b = a;
    while (b != 0) 
    {
        remainder = b % 10;
        result += pow(remainder, n);
        b /= 10;
    }
    b = a;
    while (b != 0) 
    {
        remainder = b % 10;
        b /= 10;
    }
    if (result == a)
        printf("%d is an Armstrong \n", a);
    else
        printf("%d is not an Armstrong \n", a);

    return 0;
}

Output:
Input a = 1
1 is an Armstrong
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
23.Write a C program to find the Armstrong number for a given range of number.
Input:
#include <stdio.h>

int main(void) 
{
    int start, end, number, originalNumber, digitCount, result;

    printf("Input starting number of range: ");
    scanf("%d", &start);

    printf("Input ending number of range: ");
    scanf("%d", &end);

    printf("Armstrong numbers in the given range are: ");

    for (number = start; number <= end; ++number) 
    {
        originalNumber = number;
        result = 0;
        digitCount = 0;

        int temp = originalNumber;
        while (temp != 0) 
        {
            temp /= 10;
            ++digitCount;
        }
        originalNumber = number;
        while (originalNumber != 0) 
        {
            int remainder = originalNumber % 10;            
            int power = 1;
            for (int i = 0; i < digitCount; ++i) 
            {
               power *= remainder;
            }
            result += power;
            originalNumber /= 10;
        }
        if (result == number)
        printf("%d ", number);
    }
    printf("\n");
    return 0;
}

Output:
Input starting number of range: 1
Input ending number of range: 1000
Armstrong numbers in the given range are: 1 2 3 4 5 6 7 8 9 153 370 371 407
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
24.Write a program in C to display the pattern like a diamond.
Input:
#include<stdio.h>
int main (void)
{
    int a =5,i,j;

	 
    for ( i=1; i<=a; i++)
    {
        for ( j=1; j<=i; j++)
        {
            printf("* ");
        }
        printf("\n");
	}
	
	for(i=a-1; i>=1; i--)
	{
		for( j=1;j<=i;j++)
	 	{
		 	printf("* ");
	 	}
		printf("\n");
	} 
        
        return 0;
}

Output:
*
***
*****
*******
*********
*******
*****
***
*
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
25.Write a C program to determine whether a given number is prime or not. 
Input:
#include <stdio.h>

int main(void) 
{
    int a, i, d=1;
    printf("Enter a number: ");
    scanf("%d", &a);

    for (i = 2; i <= a / 2; ++i) 
    {
        if (a % i == 0) 
        {
            d = 0;
            break;
        }
    }

    if(d)
        printf("%d is a prime number.\n", a);
    else
        printf("%d is not a prime number.\n", a);
    return 0;
}

Output:
Enter a number: 10
10 is not a prime number.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
26.Write a C program to display Pascal's triangle. Test Data :
Input:
#include <stdio.h>
int main(void) 
{
    int rows, i, j, n=1;
    printf("Enter number of rows= ");
    scanf("%d", &rows);

    for (i = 0; i < rows; i++) 
    {
        for (j = 0; j < rows - i; j++) 
        {
            printf("  ");
        }
        for (j = 0; j <= i; j++) 
        {
            printf("%4d", n);
            n = n * (i - j) / (j + 1);
        }
        printf("\n");
    }
    return 0;
}

Output:
Enter number of rows= 4
           1
         0   0
       0   0   0
     0   0   0   0
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27.Write a program in C to find the prime numbers within a range of numbers.
	Test Data :
		Input starting number of range: 1 Input ending number of range : 50 
	Expected Output :
		The prime number between 1 and 50 are :
		2 3 5 7 11 13 17 19 23 29 31 37 41 43 47
Input:
#include <stdio.h>

int main(void) 
{
    int start, end, i, j, n=1;

    printf("Enter the starting number of the range: ");
    scanf("%d", &start);

    printf("Enter the ending number of the range: ");
    scanf("%d", &end);

    printf("Prime numbers in the given range are: ");

    for (i = start; i <= end; ++i)
    {
        for (j = 2; j <= i / 2; ++j) 
        {
            if (i % j == 0) 
            {
                n = 0; 
                break;
            }
        }
        if (n && i > 1)
            printf("%d ", i);
    }
    printf("\n");
    return 0;
}

Output:

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28.Write a program in C to display the first n terms of Fibonacci series. Fibonacci series 0 1 2 3 5 8 13 .....

Input:
#include <stdio.h>

int main(void) 
{
    int n, a = 0, b = 1, temp, i;
    printf("Enter the number of terms= ");
    scanf("%d", &n);
    printf("Fibonacci Series= ");

    for (i = 0; i < n; i++) 
    {
        printf("%d ",a);

        temp = a + b;
        a = b;
        b = temp;
    }
    printf("\n");
    return 0;
}

Output:
Enter the number of terms= 14
Fibonacci Series= 0 1 1 2 3 5 8 13 21 34 55 89 144 233

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
29.Write a program in C to display the number in reverse order. 
Input:
#include <stdio.h>

int main(void) 
{
    int num, a = 0, b;
    printf("Enter an integer: ");
    scanf("%d", &num);

    while (num != 0) 
    {
        b = num % 10;
        a = a * 10 + b;
        num = num / 10;
    }
    printf("Reversed Number: %d\n", a);
    return 0;
}

Output:
Enter an integer: 123456
Reversed Number: 654321
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
30.Write a program in C to check whether a number is a palindrome or not. 
Input:
#include <stdio.h>
int main(void) 
{
    int num, a, b = 0, remainder;
    printf("Enter an integer: ");
    scanf("%d", &num);

    a = num;
    while (num != 0) 
    {
        remainder = num % 10;
        b = b * 10 + remainder;
        num = num / 10;
    }
        if (a == b) 
        {
        printf("%d is a palindrome.\n", a);
    } 
    else 
    {
        printf("%d is not a palindrome.\n", a);
    }
    return 0;
}

Output:
Enter an integer: 141
141 is a palindrome.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
31.Write a program in C to find the number and sum of all integer between 100 and 200 which are divisible by 9.
Input:
#include <stdio.h> 
int main(void)
{
   int i, sum=0;
   printf("Numbers between 100 and 200, divisible by 9 : \n"); 

   for(i=101; i<200; i++) 
   {
     if(i%9==0) 
     {
       printf("% 5d", i);
       sum = sum + i; 
     }
   }

   printf("\n\nThe sum : %d \n", sum); 
    return 0;
}

Output:
 Numbers between 100 and 200, divisible by 9 : 
  108  117  126  135  144  153  162  171  180  189  198

The sum : 1683 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
32.Write a C program to find HCF (Highest Common Factor) of two numbers. 
Input:
#include <stdio.h>
int main(void)
{
    int n1,n2;
    
    n1 = 36, n2 = 60;
    
    int min = (n1<n2) ? n1 : n2;
    int hcf=1;
    for(int i=1; i<=min; i++)
    {
        if(n1%i==0 && n2%i==0)
        {
            hcf = i;
        }
    }
    printf(" HCF of %d and %d = %d\n", n1, n2, hcf);
    return 0;
}

Output:
 HCF of 36 and 60 = 12
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
33.Write a program in C to print a string in reverse order. 
Input:
#include <stdio.h>
#include <string.h>

void printReverse(char *str, int length) 
{
    if (length == 0) 
    {
        return;
    }
    printf("%c", str[length - 1]);
    printReverse(str, length - 1);
}
int main(void) 
{
    char inputString[100];
    printf("Enter a string: ");
    fgets(inputString, sizeof(inputString), stdin);

    inputString[strcspn(inputString, "\n")] = '\0';
    int length = strlen(inputString);
    printf("Reversed string: ");
    printReverse(inputString, length);
    printf("\n");
    return 0;
}

Output:
Enter a string: GOOD MORNING
Reversed string: GNINROM DOOG

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------